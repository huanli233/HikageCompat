import{_ as o,r as p,o as t,c as r,b as a,d as s,a as l,e}from"./app-NfocEJii.js";const c={},i=e('<h1 id="hikage-recyclerview" tabindex="-1"><a class="header-anchor" href="#hikage-recyclerview" aria-hidden="true">#</a> hikage-recyclerview</h1><p><img src="https://img.shields.io/maven-central/v/com.huanli233.hikage.compat/hikage-recyclerview?logo=apachemaven&amp;logoColor=orange" alt="Maven Central"><span style="margin-left:5px;"></span><img src="https://img.shields.io/badge/Min SDK-14-orange?logo=android" alt="Android Min SDK"></p>',2),d={href:"https://github.com/drakeet/MultiType",target:"_blank",rel:"noopener noreferrer"},A={href:"https://developer.android.google.cn/topic/libraries/architecture/paging/v3-overview",target:"_blank",rel:"noopener noreferrer"},y=e(`<h2 id="配置依赖" tabindex="-1"><a class="header-anchor" href="#配置依赖" aria-hidden="true">#</a> 配置依赖</h2><p>你可以使用如下方式将此模块添加到你的项目中。</p><h3 id="sweetdependency-推荐" tabindex="-1"><a class="header-anchor" href="#sweetdependency-推荐" aria-hidden="true">#</a> SweetDependency (推荐)</h3><p>在你的项目 <code>SweetDependency</code> 配置文件中添加依赖。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#8DDB8C;">libraries</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#8DDB8C;">com.huanli233.hikage.compat</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#8DDB8C;">hikage-recyclerview</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">      </span><span style="color:#8DDB8C;">version</span><span style="color:#ADBAC7;">: </span><span style="color:#96D0FF;">+</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在你的项目 <code>build.gradle.kts</code> 中配置依赖。</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#DCBDFB;">implementation</span><span style="color:#ADBAC7;">(com.huanli233.hikage.compat.hikage.recyclerview)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="传统方式" tabindex="-1"><a class="header-anchor" href="#传统方式" aria-hidden="true">#</a> 传统方式</h3><p>在你的项目 <code>build.gradle.kts</code> 中配置依赖。</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#DCBDFB;">implementation</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;com.huanli233.hikage.compat:hikage-recyclerview:&lt;version&gt;&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>请将 <code>&lt;version&gt;</code> 修改为此文档顶部显示的版本。</p><h2 id="功能介绍" tabindex="-1"><a class="header-anchor" href="#功能介绍" aria-hidden="true">#</a> 功能介绍</h2>`,12),D={href:"https://huanli233.github.io/HikageCompat/KDoc/hikage-recyclerview",target:"_blank",rel:"noopener noreferrer"},B=e(`<h3 id="multitype" tabindex="-1"><a class="header-anchor" href="#multitype" aria-hidden="true">#</a> MultiType</h3><p>Hikage 为 <code>MultiType</code> 的 <code>Delegate</code> 提供了封装。</p><blockquote><p>示例如下</p></blockquote><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">MenuItemDelegate</span><span style="color:#ADBAC7;">: </span><span style="color:#F69D50;">ItemHikageDelegate</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">MenuItem</span><span style="color:#ADBAC7;">&gt;() {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">override</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">createView</span><span style="color:#ADBAC7;">(): </span><span style="color:#F69D50;">Hikage</span><span style="color:#ADBAC7;">.Delegate</span><span style="color:#F47067;">&lt;*&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Hikageable</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">ViewGroup</span><span style="color:#ADBAC7;">.</span><span style="color:#F69D50;">MarginLayoutParams</span><span style="color:#ADBAC7;">&gt; {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#DCBDFB;">MaterialButton</span><span style="color:#ADBAC7;">(</span></span>
<span class="line"><span style="color:#ADBAC7;">            id </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;menuBtn&quot;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">            lparams </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">widthMatchParent</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#DCBDFB;">updateMargins</span><span style="color:#ADBAC7;">(horizontal </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">12</span><span style="color:#ADBAC7;">.dp, vertical </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">.dp)</span></span>
<span class="line"><span style="color:#ADBAC7;">            }</span></span>
<span class="line"><span style="color:#ADBAC7;">        )</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">override</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">bindView</span><span style="color:#ADBAC7;">(hikage: </span><span style="color:#F69D50;">Hikage</span><span style="color:#ADBAC7;">, item: </span><span style="color:#F69D50;">MenuItem</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        hikage.</span><span style="color:#DCBDFB;">get</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">MaterialButton</span><span style="color:#ADBAC7;">&gt;(</span><span style="color:#96D0FF;">&quot;menuBtn&quot;</span><span style="color:#ADBAC7;">).</span><span style="color:#DCBDFB;">apply</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">            text </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> context.</span><span style="color:#DCBDFB;">getString</span><span style="color:#ADBAC7;">(item.title)</span></span>
<span class="line"><span style="color:#ADBAC7;">            icon </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> ContextCompat.</span><span style="color:#DCBDFB;">getDrawable</span><span style="color:#ADBAC7;">(context, item.icon)</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="paging" tabindex="-1"><a class="header-anchor" href="#paging" aria-hidden="true">#</a> Paging</h3><p>对于 <code>Paging</code> ，Hikage 提供了 <code>PagingDataAdapter</code> 和 <code>LoadStateAdapter</code> 的封装。</p><blockquote><p>PagingDataAdapter 示例如下</p></blockquote><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">VideoPagingAdapter</span><span style="color:#ADBAC7;">: </span><span style="color:#F69D50;">HikagePagingAdapter</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">VideoInfo</span><span style="color:#ADBAC7;">&gt;(</span><span style="color:#DCBDFB;">VideoInfoDiffCallback</span><span style="color:#ADBAC7;">()) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">override</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">createView</span><span style="color:#ADBAC7;">(): </span><span style="color:#F69D50;">Hikage</span><span style="color:#ADBAC7;">.Delegate</span><span style="color:#F47067;">&lt;*&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Hikageable</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#DCBDFB;">VideoCard</span><span style="color:#ADBAC7;">(id </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;card&quot;</span><span style="color:#ADBAC7;">, lparams </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">widthMatchParent</span><span style="color:#ADBAC7;">())</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">override</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">bindView</span><span style="color:#ADBAC7;">(hikage: </span><span style="color:#F69D50;">Hikage</span><span style="color:#ADBAC7;">, item: </span><span style="color:#F69D50;">VideoInfo</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        hikage.</span><span style="color:#DCBDFB;">get</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">VideoCard</span><span style="color:#ADBAC7;">&gt;(</span><span style="color:#96D0FF;">&quot;card&quot;</span><span style="color:#ADBAC7;">).</span><span style="color:#DCBDFB;">apply</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#DCBDFB;">setVideoTitle</span><span style="color:#ADBAC7;">(item.title)</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#DCBDFB;">setVideoCover</span><span style="color:#ADBAC7;">(item.pic)</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#DCBDFB;">setViews</span><span style="color:#ADBAC7;">(item.stat.view.</span><span style="color:#DCBDFB;">formatNumber</span><span style="color:#ADBAC7;">())</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#DCBDFB;">setUploader</span><span style="color:#ADBAC7;">(item.owner.name)</span></span>
<span class="line"><span style="color:#ADBAC7;">            binding.root.</span><span style="color:#DCBDFB;">setOnClickListener</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                context.</span><span style="color:#DCBDFB;">start</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">VideoInfoActivity</span><span style="color:#ADBAC7;">&gt; {</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#DCBDFB;">putExtra</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;bvid&quot;</span><span style="color:#ADBAC7;">, item.bvid)</span></span>
<span class="line"><span style="color:#ADBAC7;">                }</span></span>
<span class="line"><span style="color:#ADBAC7;">            }</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>LoadStateAdapter 示例如下</p></blockquote><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">LoadStateAdapter</span><span style="color:#ADBAC7;">(</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> retry: (() </span><span style="color:#F47067;">-&gt;</span><span style="color:#ADBAC7;"> Unit)? </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span></span>
<span class="line"><span style="color:#ADBAC7;">): </span><span style="color:#F69D50;">HikageLoadStateAdapter</span><span style="color:#ADBAC7;">() {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">override</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">createView</span><span style="color:#ADBAC7;">(loadState: </span><span style="color:#F69D50;">LoadState</span><span style="color:#ADBAC7;">): </span><span style="color:#F69D50;">Hikage</span><span style="color:#ADBAC7;">.Delegate</span><span style="color:#F47067;">&lt;*&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Hikageable</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// layout...</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">override</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">bindView</span><span style="color:#ADBAC7;">(hikage: </span><span style="color:#F69D50;">Hikage</span><span style="color:#ADBAC7;">, loadState: </span><span style="color:#F69D50;">LoadState</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (loadState </span><span style="color:#F47067;">is</span><span style="color:#ADBAC7;"> LoadState.Error) {</span></span>
<span class="line"><span style="color:#ADBAC7;">            hikage.</span><span style="color:#DCBDFB;">get</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">TextView</span><span style="color:#ADBAC7;">&gt;(</span><span style="color:#96D0FF;">&quot;load_state_error_msg&quot;</span><span style="color:#ADBAC7;">).text </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> loadState.error.localizedMessage</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">        hikage.</span><span style="color:#DCBDFB;">get</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">ProgressBar</span><span style="color:#ADBAC7;">&gt;(</span><span style="color:#96D0FF;">&quot;load_state_progress_indicator&quot;</span><span style="color:#ADBAC7;">).isVisible </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> loadState </span><span style="color:#F47067;">is</span><span style="color:#ADBAC7;"> LoadState.Loading</span></span>
<span class="line"><span style="color:#ADBAC7;">        hikage.</span><span style="color:#DCBDFB;">get</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">Button</span><span style="color:#ADBAC7;">&gt;(</span><span style="color:#96D0FF;">&quot;load_state_retry_btn&quot;</span><span style="color:#ADBAC7;">).isVisible </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> loadState </span><span style="color:#F47067;">is</span><span style="color:#ADBAC7;"> LoadState.Error </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> retry </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span></span>
<span class="line"><span style="color:#ADBAC7;">        hikage.</span><span style="color:#DCBDFB;">get</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">TextView</span><span style="color:#ADBAC7;">&gt;(</span><span style="color:#96D0FF;">&quot;load_state_error_msg&quot;</span><span style="color:#ADBAC7;">).isVisible </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> loadState </span><span style="color:#F47067;">is</span><span style="color:#ADBAC7;"> LoadState.Error</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10);function C(v,u){const n=p("ExternalLinkIcon");return t(),r("div",null,[i,a("p",null,[s("这是 Hikage 针对 RecyclerView 相关功能的扩展依赖，核心基于 "),a("a",d,[s("MultiType"),l(n)]),s(" 与 "),a("a",A,[s("Paging"),l(n)]),s("。")]),y,a("p",null,[s("你可以 "),a("a",D,[s("点击这里"),l(n)]),s(" 查看 KDoc。")]),B])}const g=o(c,[["render",C],["__file","hikage-recyclerview.html.vue"]]);export{g as default};
